{"version":3,"sources":["Routes/AuthRoute.js","Contexts/DataContext.js","Components/Pages/SignUp/SignUpPresenter.js","Components/Pages/SignUp/index.js","Components/Pages/SignUp/SignUpContainer.js","Components/Pages/Login/LoginPresenter.js","Components/Pages/Login/index.js","Components/Pages/Login/LoginContainer.js","Components/Pages/Main/Waveform.js","Components/Pages/Main/TalkerForm.js","Components/Pages/Main/TalkerItem.js","Components/Pages/Main/Save.js","Components/Pages/Main/Connect.js","Components/Pages/Main/index.js","Components/Pages/ProjectStart/ProjectStartPresenter.js","Components/Pages/ProjectStart/index.js","Components/Pages/ProjectStart/ProjectStartContainer.js","Components/Pages/Header/HeaderPresenter.js","Components/Pages/Header/index.js","Components/Pages/Header/HeaderContainer.js","Components/Router.js","Contexts/UserContext.js","Components/App.js","index.js"],"names":["AuthRoute","isAuthed","path","children","props","to","DataContext","createContext","useStyles","makeStyles","theme","layout","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","guest","SignUpPresenter","creds","email","password","sendCred","status","updateCred","classes","useHistory","Container","style","component","maxWidth","className","Typography","variant","align","noValidate","onSubmit","TextField","required","fullWidth","id","label","name","value","onChange","event","autoFocus","type","Button","color","SignUpContainer","cred","setState","target","a","preventDefault","state","axios","post","result","console","log","bind","this","Component","LoginPresenter","Grid","container","item","xs","LoginContainer","then","res","updateUserToken","data","catch","error","alert","Waveform","onLoading","wavesurfer","originalArgs","loaded","enableDragSelection","Math","random","on","duration","getDuration","playing","skipBackward","onPosChange","pos","getCurrentTime","secondsToPosition","sec","handleSingleRegionUpdate","e","newState","Object","assign","regions","region","handleRegionClick","setTimeout","seekTo","start","regionFlag","onClick","end","handleRegionDone","zoom","direction","currentZoom","params","minPxPerSec","audioFile","options","barGap","barWidth","barHeight","cursorWidth","cursorColor","height","hideScrollbar","progressColor","responsive","waveColor","volume","onSingleRegionUpdate","onRegionClick","onRegionOut","Date","toISOString","substr","setPlayEnd","clearRegions","handleClearRegionPoints","React","TalkerForm","talker","text","handleSelectRow","row","handleChange","handleSubmit","selectedBoard","onSaveData","brdno","justify","placeholder","marginLeft","InputLabelProps","shrink","sm","padding","TalkerItem","onSelectRow","handleRemove","onRemove","InputProps","readOnly","analysisType","regionStart","handleAudioPlay","audioPlaying","play","regionEnd","list","Save","SaveFile","handleResult","d","FileSaver","require","blob","Blob","JSON","stringify","saveAs","filename","open","message","handleClickOpen","handleClose","handleValueChange","handleFileChange","fileName","nextState","Dialog","onClose","DialogTitle","DialogContent","Connect","KSTProject","token","headers","response","boards","Context","useContext","m_Audio","audioCurrentPosition","audioFileIndex","audioPath","localStorage","m_KTierMorpVer2","dataType","datas","morp","speaker","uid","user","m_KTierVer2","time","m_Option","speakerList","stringOption","m_header","arrID","age","IDAge","code","corpus","dateOfBirth","edu","IDEdu","group","IDGroup","IDRegion","role","ses","IDSES","sex","IDSex","arrParticipants","birthOfCHI","birthPlaceOfCHI","BirthPlace","comment","Comment","date","language","location","Location","media","recording","reviewer","Reviewer","situation","Situation","speechType","transcriber","Transcriber","userDto","projectName","version","Main","updatetoken","bool","handleSetRegionPoints","handleGetData","concat","maxNo","map","filter","userToken","Title","styled","h2","Form","NextBtn","Link","getUploadedFile","projData","helperText","Input","accept","hidden","FormControl","RadioGroup","aria-label","FormControlLabel","control","Radio","update","ProjectStartContainer","file","files","conversationType","ProjectStartPresenter","div","HeaderPresenter","handleSaveData","handleSubmit2","handleFlag","SpeechType","Participants","Recording","Code","IDCorpus","IDDateOfBirth","ChIDAge","ChIDSex","ChIDGroup","ChIDRegion","ChIDSES","ChIDEdu","MoIDAge","MoIDSex","MoIDGroup","MoIDRegion","MoIDSES","MoIDEdu","FaIDAge","FaIDSes","FaIDGroup","FaIDRegion","FaIDSES","FaIDEdu","IDCode","IDRole","Role","addFlag","CHI","MOT","FAT","FormLabel","Box","border","borderRadius","borderColor","marginBottom","InputLabel","htmlFor","Select","native","inputProps","HeaderContainer","board","FaIDSex","Router","useState","setProjData","exact","Login","SignUp","Provider","prev","ProjectStart","Header","from","UserContext","App","cookies","set","get","withCookies","ReactDOM","render","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.31f9cc45.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AuthRoute = ({ isAuthed, path, children, ...props }) => {\r\n  return (\r\n    <Route path={path} {...props}>\r\n      {!isAuthed ? <Redirect to=\"/waveform\" /> : { ...children }}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import { createContext } from \"react\";\r\n\r\nconst DataContext = createContext();\r\n\r\nexport default DataContext;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {},\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  guest: {\r\n    marginTop: 50,\r\n  },\r\n}));\r\n\r\nconst SignUpPresenter = ({\r\n  creds: { email, password, status, sendCred, updateCred },\r\n}) => {\r\n  const classes = useStyles;\r\n  const history = useHistory();\r\n  const goBack = (status) => {\r\n    if (status === 201) history.push(\"/waveform\");\r\n    else alert(\"회원가입에 실패하였습니다.\");\r\n  };\r\n\r\n  return (\r\n    <Container style={{ marginTop: 150 }} component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h3\" align=\"center\">\r\n          KSTARS 회원가입\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={sendCred}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(event) => updateCred(event, \"email\")}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(event) => updateCred(event, \"password\")}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            // onClick={() => goBack(status)}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {/* {email && password ? (\r\n            <Link to={\"/waveform\"}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          )} */}\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUpPresenter;\r\n","import SignUpContainer from \"./SignUpContainer\";\r\n\r\nexport default SignUpContainer;\r\n","import React, { Component } from \"react\";\r\nimport SignUpPresenter from \"./SignUpPresenter\";\r\nimport axios from \"axios\";\r\n\r\nconst AWS = //\"http://192.168.43.8:8080/cosmos/kStars/signUp\";\r\n  \"http://ec2-3-86-166-99.compute-1.amazonaws.com:8080/cosmos/kStars/signUp\";\r\n\r\nconst LOCAL = \"http://192.168.0.10:8080/cosmos/kStars/signUp\";\r\n\r\nclass SignUpContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      status: null,\r\n    };\r\n    this.updateCred = this.updateCred.bind(this);\r\n    this.sendCred = this.sendCred.bind(this);\r\n  }\r\n\r\n  updateCred = (event, cred) => {\r\n    this.setState({\r\n      [cred]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // sendCred = (event) => {\r\n  //   event.preventDefault();\r\n  //   const { email, password, role } = this.state;\r\n  //   axios\r\n  //     .post(AWS, { email, password, role })\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"error\", error.response);\r\n  //       alert(\"모든 칸을 입력해주세요.\");\r\n  //     });\r\n  // };\r\n\r\n  sendCred = async (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    try {\r\n      const result = await axios.post(AWS, {\r\n        email,\r\n        password,\r\n      });\r\n      console.log(\"sign up result\", result);\r\n      this.setState({ status: result.status });\r\n    } catch (error) {\r\n      console.log(\"sign up error\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { email, password, status } = this.state;\r\n    const { sendCred, updateCred } = this;\r\n    // console.log(\"Sign Up Creds\", email, password, status);\r\n    return (\r\n      <SignUpPresenter\r\n        creds={{\r\n          email,\r\n          password,\r\n          status,\r\n          sendCred,\r\n          updateCred,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpContainer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layout: {},\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  guest: {\r\n    marginTop: 50,\r\n  },\r\n}));\r\n\r\nconst LoginPresenter = ({\r\n  creds: { email, password, sendCred, updateCred },\r\n}) => {\r\n  const classes = useStyles;\r\n  return (\r\n    <Container style={{ marginTop: 150 }} component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\">\r\n          KSTARS\r\n        </Typography>\r\n        {/* 로그인 폼 */}\r\n        <form className={classes.form} noValidate onSubmit={sendCred}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(event) => updateCred(event, \"email\")}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(event) => updateCred(event, \"password\")}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container style={{ marginTop: 10 }}>\r\n            <Grid item xs>\r\n              <Link to=\"#\" variant=\"body2\">\r\n                Forgot password\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/waveform/signup\" variant=\"body2\">\r\n                {\"Create an account\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Link to={\"/waveform/main\"}>\r\n          <Button\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ marginTop: 30 }}\r\n          >\r\n            {\"GUEST로 이용하기\"}\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPresenter;\r\n","import LoginContainer from \"./LoginContainer\";\r\n\r\nexport default LoginContainer;\r\n","import React, { Component } from \"react\";\r\nimport LoginPresenter from \"./LoginPresenter\";\r\nimport axios from \"axios\";\r\n\r\nconst AWS = //\"http://192.168.43.8:8080/cosmos/KStars/test1\";\r\n  \"http://ec2-3-86-166-99.compute-1.amazonaws.com:8080/cosmos/kStars/signIn\";\r\n\r\nconst LOCAL = \"http://192.168.0.10:8080/cosmos/kStars/signIn\";\r\nclass LoginContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n    this.updateCred = this.updateCred.bind(this);\r\n    this.sendCred = this.sendCred.bind(this);\r\n  }\r\n\r\n  updateCred = (event, cred) => {\r\n    this.setState({\r\n      [cred]: event.target.value,\r\n    });\r\n  };\r\n\r\n  sendCred = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    // try{\r\n    //   const result= await axios.post(AWS,{\r\n    //     email,\r\n    //     password,\r\n    //   });\r\n    //   console.log(\"result:\",result);\r\n    // }catch(error){\r\n    //   console.log(\"login error\", error);\r\n    //   alert(\"틀린 이메일 혹은 비밀번호입니다.\");\r\n    // }\r\n     axios\r\n       .post(AWS, {\r\n         email,\r\n         password,\r\n       })\r\n       .then((res) => {\r\n         console.log(res);\r\n         this.props.updateUserToken(res.data);\r\n       })\r\n       .catch((error) => {\r\n         console.log(\"login error\", error);\r\n         alert(\"틀린 이메일 혹은 비밀번호입니다.\");\r\n       });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    // console.log(\"Login Creds\", email, password);\r\n    const { sendCred, updateCred } = this;\r\n    return (\r\n      <LoginPresenter\r\n        creds={{\r\n          email,\r\n          password,\r\n          sendCred,\r\n          updateCred,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport ReactWaves, { Regions } from \"@dschoon/react-waves\";\r\n\r\nexport default class Waveform extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      regionFlag: false,\r\n      playing: false,\r\n      wavesurfer: null,\r\n      duration: 0,\r\n      pos: 0,\r\n      regions: {},\r\n    };\r\n  }\r\n\r\n  onLoading = ({ wavesurfer, originalArgs = [] }) => {\r\n    this.setState({\r\n      loaded: originalArgs[0] === 100,\r\n      wavesurfer,\r\n    });\r\n    this.state.wavesurfer.enableDragSelection({\r\n      color: 'rgba('+[~~(Math.random()*255),\r\n        ~~(Math.random()*255),\r\n        ~~(Math.random()*255),\r\n        0.3,\r\n      ]+')',\r\n      //color: \"rgba(100, 149, 240, 0.3)\",\r\n    });\r\n    this.state.wavesurfer.on(\"ready\", () =>\r\n      this.setState({ duration: wavesurfer.getDuration() })\r\n    );\r\n    this.state.wavesurfer.on(\"finish\", () => {\r\n      this.setState({ playing: false });\r\n      // go back to the start point\r\n      wavesurfer.skipBackward(this.state.duration);\r\n    });\r\n  };\r\n\r\n  onPosChange = (pos, wavesurfer) => {\r\n    this.setState({\r\n      pos: wavesurfer.getCurrentTime(),\r\n      wavesurfer,\r\n    });\r\n  };\r\n\r\n  // Region\r\n  secondsToPosition = (sec) => {\r\n    return (1 / this.state.wavesurfer.getDuration()) * sec;\r\n  };\r\n\r\n  handleSingleRegionUpdate = (e) => {\r\n    const newState = Object.assign(this.state, {\r\n      regions: {\r\n        [e.region.id]: e.region,\r\n      },\r\n    });\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleRegionClick = (e) => {\r\n    setTimeout(() => {\r\n      this.state.wavesurfer.seekTo(\r\n        this.secondsToPosition(e.originalArgs[0].start)\r\n      );\r\n    }, 50);\r\n\r\n    this.setState({ regionFlag: true });\r\n\r\n    // 부모 컴포넌트 index로 값 넘기기\r\n    this.props.onClick(\r\n      e.originalArgs[0].start,\r\n      e.originalArgs[0].end,\r\n      this.state.wavesurfer\r\n    );\r\n\r\n  };\r\n\r\n  handleRegionDone = (e) => {\r\n    if (this.state.regionFlag) {\r\n      // go back to the start point\r\n      setTimeout(() => {\r\n        this.state.wavesurfer.seekTo(\r\n          this.secondsToPosition(e.originalArgs[0].start)\r\n        );\r\n      }, 50);\r\n      //loop prevent\r\n      this.setState({ playing: false }); //구간을 클릭한 상태일때 구간 반복재생\r\n    }\r\n  };\r\n\r\n  // Zoom\r\n  zoom = (direction) => {\r\n    const { wavesurfer } = this.state;\r\n    const currentZoom = wavesurfer.params.minPxPerSec;\r\n\r\n    if (direction === \"in\") {\r\n      wavesurfer.zoom(currentZoom + 10);\r\n    } else if (direction === \"out\" && currentZoom > 1) {\r\n      wavesurfer.zoom(currentZoom - 10);\r\n    }\r\n  };\r\n  render() {\r\n    const { duration, pos, wavesurfer } = this.state;\r\n    return (\r\n      <>\r\n        <div className={\"container example\"}>\r\n          <ReactWaves\r\n            id=\"waveform\"\r\n            audioFile={\r\n              \"https://www.mfiles.co.uk/mp3-downloads/gs-cd-track2.mp3\"\r\n            }\r\n            className={\"react-waves\"}\r\n            options={{\r\n              barGap: 2,\r\n              barWidth: 1.8,\r\n              barHeight: 2,\r\n              cursorWidth: 2,\r\n              cursorColor: \"#202a66\",\r\n              height: 200,\r\n              hideScrollbar: true,\r\n              progressColor: \"#EC407A\",\r\n              responsive: true,\r\n              waveColor: \"#D1D6DA\",\r\n            }}\r\n            volume={1}\r\n            zoom={1}\r\n            pos={this.state.pos}\r\n            playing={this.state.playing}\r\n            onPosChange={this.onPosChange}\r\n            onLoading={this.onLoading}\r\n          >\r\n            <Regions\r\n              onSingleRegionUpdate={this.handleSingleRegionUpdate}\r\n              onRegionClick={this.handleRegionClick}\r\n              onRegionOut={this.handleRegionDone}\r\n              regions={this.state.regions}\r\n            />\r\n          </ReactWaves>\r\n          <div>\r\n            {new Date(pos * 1000).toISOString().substr(11, 8)} /{\" \"}\r\n            {new Date(duration * 1000).toISOString().substr(11, 8)}\r\n          </div>\r\n          <button\r\n            className=\"play button\"\r\n            onClick={() => {\r\n              this.setState({\r\n                playing: !this.state.playing,\r\n                regionFlag: false,\r\n              });\r\n              this.state.wavesurfer.on(\"audioprocess\", () => {\r\n                this.state.wavesurfer.setPlayEnd(\r\n                  this.state.wavesurfer.getDuration()\r\n                );\r\n              });\r\n            }}\r\n          >\r\n            {!this.state.playing ? \"Whole PLAY ▶\" : \"PAUSE ⏸\"}\r\n          </button>\r\n\r\n          {this.state.regionFlag ? (\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ playing: !this.state.playing });\r\n              }}\r\n            >\r\n              {!this.state.playing ? \"Region PLAY\" : \"Pause\"}\r\n            </button>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n\r\n          <br />\r\n          <button\r\n            className=\"clearRegions button\"\r\n            onClick={() => {\r\n              wavesurfer.clearRegions();\r\n              this.props.handleClearRegionPoints();\r\n              this.setState({ regionFlag: false });\r\n            }}\r\n          >\r\n            Clear All Regions\r\n          </button>\r\n\r\n          <div className=\"zoom-buttons\">\r\n            <button\r\n              className=\"zoom-in button\"\r\n              onClick={this.zoom.bind(this, \"in\")}\r\n            >\r\n              {\"➕️\"} Zoom In\r\n            </button>\r\n            <button\r\n              className=\"zoom-out button\"\r\n              onClick={this.zoom.bind(this, \"out\")}\r\n            >\r\n              {\"➖️\"} Zoom Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default class TalkerForm extends React.Component {\r\n  state = {\r\n    talker: \"\",\r\n    text: \"\",\r\n  };\r\n\r\n  handleSelectRow = (row) => {\r\n    this.setState(row);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let selectedBoard = this.props.selectedBoard;\r\n    const { talker, text } = this.state;\r\n    let data = {\r\n      talker,\r\n      text,\r\n    };\r\n    this.props.onSaveData(data, selectedBoard.brdno);\r\n    this.setState({\r\n      talker: \"\",\r\n      text: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <Grid container spacing={3} item xs={12}>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={3}\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              label=\"발화인\"\r\n              placeholder=\"발화인을 입력하세요\"\r\n              style={{ margin: 8, marginLeft: 120 }}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              name=\"talker\"\r\n              value={this.state.talker}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div>\r\n              <TextField\r\n                label=\"전사할 내용 입력\"\r\n                style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                name=\"text\"\r\n                value={this.state.text}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            sm={1}\r\n            direction=\"column\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ margin: 20, padding: 10 }}\r\n            >\r\n              입력\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass TalkerItem extends Component {\r\n  handleSelectRow = () => {\r\n    const { row, onSelectRow } = this.props;\r\n    onSelectRow(row);\r\n  };\r\n\r\n  handleRemove = () => {\r\n    const { row, onRemove } = this.props;\r\n    onRemove(row.brdno);\r\n  };\r\n\r\n  render() {\r\n    const { row } = this.props;\r\n    return (\r\n      <Grid container spacing={1} item sm={12}>\r\n        {/* 행번호, 발화인, 분석태그 start */}\r\n        <Grid\r\n          container\r\n          item\r\n          sm={1}\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Typography style={{ marginTop: 25, marginLeft: 20 }}>\r\n            {row.brdno}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          sm={2}\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <TextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"발화인\"\r\n            value={row.talker}\r\n            style={{ margin: 8, marginLeft: 20 }}\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            onClick={this.handleSelectRow}\r\n          />\r\n\r\n          <Typography variant=\"h6\" style={{ marginTop: 5, marginLeft: 80 }}>\r\n            {row.analysisType}\r\n          </Typography>\r\n        </Grid>\r\n        {/* 행번호, 발화인, 분석태그 end */}\r\n\r\n        {/* 발화내용 start */}\r\n        <Grid container item sm={8}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n          >\r\n            <TextField\r\n              id=\"outlined-full-width\"\r\n              label=\"발화내용\"\r\n              value={row.text}\r\n              style={{ margin: 8 }}\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              onClick={this.handleSelectRow}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* 발화내용 end */}\r\n\r\n        {/* 삭제, 분석상세보기 버튼 start */}\r\n        <Grid\r\n          item\r\n          sm={1}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\"\r\n        >\r\n          {this.props.row.regionStart ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ margin: 20, padding: 10 }}\r\n              onClick={() => {\r\n                const {\r\n                  handleAudioPlay,\r\n                  audioPlaying,\r\n                  row,\r\n                  wavesurfer,\r\n                } = this.props;\r\n\r\n                // go back to the start point when it's clickced\r\n                wavesurfer.seekTo(\r\n                  (1 / wavesurfer.getDuration()) * row.regionStart\r\n                );\r\n\r\n                wavesurfer.play();\r\n\r\n                wavesurfer.on(\"audioprocess\", () => {\r\n                  wavesurfer.play();\r\n                  wavesurfer.setPlayEnd(row.regionEnd);\r\n                  // console.log(\"cur\", wavesurfer.getCurrentTime());\r\n                });\r\n\r\n                console.log(wavesurfer.regions.list);\r\n\r\n                // wavesurfer.clearRegions();\r\n\r\n                // loop\r\n                // wavesurfer.on(\"pause\", () => {\r\n                //   wavesurfer.play();\r\n                // });\r\n\r\n                // console.log(`${row.brdno}번 구간 시작 : ${row.regionStart}`);\r\n                // console.log(`${row.brdno}번 구간 끝 : ${row.regionEnd}`);\r\n                // console.log(\"wavesurfer : \", wavesurfer);\r\n              }}\r\n            >\r\n              ▶{/* {this.props.wavesurfer.isPlaying() ? \"Play\" : \"Pause\"} */}\r\n            </Button>\r\n          ) : (\r\n            <span />\r\n          )}\r\n        </Grid>\r\n        {/* 삭제, 편집, 분석상세보기 버튼 end */}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TalkerItem;\r\n","import React, { Component , useContext} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, TextField } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  //스타일\r\n  layout: {},\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  guest: {\r\n    marginTop: 50,\r\n  },\r\n}));\r\nclass Save extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        filename: \"\",\r\n        open: false,\r\n        message: \"test\", //test용\r\n        result: this.props.result,\r\n      };\r\n    this.SaveFile = this.SaveFile.bind(this);\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleValueChange = this.handleValueChange.bind(this);\r\n    this.handleFileChange = this.handleFileChange.bind(this);\r\n  }\r\n  handleClickOpen() {\r\n    //저장하기 버튼 Click시\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  }\r\n  handleClose() {\r\n    //닫기 버튼 Click시\r\n    this.setState({\r\n      filename: \"\",\r\n      open: false,\r\n    });\r\n  }\r\n\r\n  SaveFile = (e) => {\r\n    e.preventDefault();\r\n    let result = this.props.result;\r\n    this.props.handleResult(result);\r\n    console.log(result);\r\n    let d = this.state.d;\r\n    console.log(d);\r\n    var FileSaver = require(\"file-saver\");\r\n    //var blob=new Blob([this.state.brdno+`\\n`+`발화자: `+this.state.talker+`\\n`+`발화내용: `+this.state.text], { type : \"text / plain; charset = utf-8\" } ) ;\r\n    var blob = new Blob([JSON.stringify(result,null,1)], {\r\n      type: \"text / plain; charset = utf-8\",\r\n    });\r\n    FileSaver.saveAs(blob, this.state.filename + `.txt`);\r\n    this.setState({\r\n      filename: \"\",\r\n      open: false,\r\n    });\r\n  };\r\n  handleFileChange(e) {\r\n    this.setState({\r\n      fileName: e.target.value,\r\n    });\r\n  }\r\n  handleValueChange(e) {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  }\r\n  render() {\r\n    const classes = useStyles;\r\n    return (\r\n      <div>\r\n        <Button\r\n          className=\"Save button\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{ margin: 20, padding: 10 }}\r\n          onClick={this.handleClickOpen}\r\n        >\r\n          저장하기\r\n        </Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>저장하기</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              label=\"제목\"\r\n              type=\"text\"\r\n              name=\"filename\"\r\n              value={this.state.filename}\r\n              onChange={this.handleValueChange}\r\n            ></TextField>\r\n            <Button onClick={this.SaveFile}>저장</Button>\r\n            <Button onClick={this.handleClose}>닫기</Button>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Save;\r\n","import React, { Component , useContext} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles, TextField } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  //스타일\r\n  layout: {},\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  guest: {\r\n    marginTop: 50,\r\n  },\r\n}));\r\nclass Connect extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      KSTProject:this.props.KSTProject,\r\n      token:this.props.token,\r\n      boards:this.props.boards,\r\n    }\r\n    this.sendCred=this.sendCred.bind(this);\r\n  };\r\n\r\nsendCred = (event) => {\r\n  event.preventDefault();\r\n  const { KSTProject, token } = this.state;\r\n  console.log(KSTProject);\r\n  console.log(token);\r\n  axios\r\n    .post(\"http://ec2-3-86-166-99.compute-1.amazonaws.com:8080/cosmos/kStars/create/kst/user\",\r\n          KSTProject,{headers: {\r\n            \"Content-type\": \"application/json\",\r\n            \"token\": token,\r\n        },} )\r\n    .then((res) => {\r\n      console.log(res);\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"error\", error.response);\r\n    });\r\n};\r\nrender(){\r\n  const classes = useStyles;\r\n  const {sendCred}=this;\r\n  return(\r\n    <div>\r\n      <form className={classes.form} noValidate onSubmit={sendCred}>\r\n          <button type=\"submit\">서버 연동 테스트</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n}\r\nexport default Connect;","import React, { Component,createContext, useContext } from \"react\";\r\nimport Waveform from \"./Waveform\";\r\nimport TalkerForm from \"./TalkerForm\";\r\nimport TalkerItem from \"./TalkerItem\";\r\nimport Save from \"./Save\";\r\nimport DataContext from \"../../../Contexts/DataContext\";\r\nimport Connect from \"./Connect\";\r\nconst AppContext=createContext();\r\n\r\nconst Context = ({creds:{KSTProject,token,boards}}) => {\r\n  const projData = useContext(DataContext);\r\n  //let data='projData';\r\n  const d=projData.data;\r\n  KSTProject= {\r\n    m_Audio: {\r\n      audioCurrentPosition: 0,\r\n      audioFileIndex: 0,\r\n      audioPath: [\r\n        localStorage.audioFile,\r\n      ],\r\n\r\n    },\r\n    m_KTierMorpVer2: {\r\n      dataType: \"string\",\r\n      datas: [{\r\n        morp: \"string\",\r\n        speaker: \"string\",\r\n        uid: \"string\",\r\n        user: \"string\"\r\n      }, ]\r\n    },\r\n    m_KTierVer2: {\r\n      dataType: \"\",\r\n      datas: [{\r\n        speaker: boards[0].talker,\r\n        text: boards[0].text,\r\n        time: \"\",\r\n        uid: 0\r\n      }, ]\r\n    },\r\n    m_Option: {\r\n      speakerList: [\r\n        \"string\",\r\n      ],\r\n      stringOption: \"string\"\r\n    },\r\n    m_header: {\r\n      arrID: [{\r\n        age: d.IDAge,\r\n        code: \"string\",\r\n        corpus: \"string\",\r\n        dateOfBirth: \"string\",\r\n        edu: d.IDEdu,\r\n        group: d.IDGroup,\r\n        region: d.IDRegion,\r\n        role: \"string\",\r\n        ses: d.IDSES,\r\n        sex: d.IDSex\r\n      }],\r\n      arrParticipants: [\r\n        \"string\"\r\n      ],\r\n      birthOfCHI: \"string\",\r\n      birthPlaceOfCHI: d.BirthPlace,\r\n      comment: d.Comment,\r\n      date: \"string\",\r\n      language: \"string\",\r\n      location: d.Location,\r\n      media: \"string\",\r\n      recording: \"string\",\r\n      reviewer: d.Reviewer,\r\n      situation: d.Situation,\r\n      speechType: \"string\",\r\n      transcriber: d.Transcriber\r\n    },\r\n    userDto: {\r\n      fileName: d.projectName,//localStorage.projectName,\r\n      id: \"string\",\r\n      user: \"user\"\r\n    },\r\n    version: \"string\"\r\n  };\r\n  return <Connect KSTProject={KSTProject} token={token} boards={boards}/>;\r\n  //return <div>{console.log(token)}</div>;\r\n  //return <div>{console.log(projData)}</div>;\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      maxNo: 1,\r\n      boards: [\r\n        {\r\n          brdno: 0,\r\n          talker: \"코스모스\",\r\n          text: \"코스모스는 가을에 피어요.\",\r\n        },\r\n      ],\r\n      selectedBoard: {},\r\n      start: null, // mp3/selected region start time\r\n      end: null, // mp3/selected region end time\r\n      wavesurfer: null,\r\n      audioPlaying: false,\r\n      result: [],\r\n      token:this.props.user.userToken,\r\n      KSTProject: null,\r\n    };\r\n    this.handleAudioPlay = this.handleAudioPlay.bind(this);\r\n    this.handleSetRegionPoints = this.handleSetRegionPoints.bind(this);\r\n    this.handleGetData = this.handleGetData.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleSelectRow = this.handleSelectRow.bind(this);\r\n    this.handleClearRegionPoints = this.handleClearRegionPoints.bind(this);\r\n    this.handleResult = this.handleResult.bind(this);\r\n    this.updatetoken=this.updatetoken.bind(this);\r\n  }\r\n  updatetoken=(event,cred)=>{\r\n    this.setState({\r\n      [cred]:event.target.value,\r\n    });\r\n  };\r\n  handleAudioPlay = (bool) => {\r\n    this.setState({ audioPlaying: bool });\r\n  };\r\n\r\n  // 자식 컴포넌트 waveform에서 받아온 값\r\n  handleSetRegionPoints = (start = null, end = null, wavesurfer = null) => {\r\n    this.setState({ start, end, wavesurfer });\r\n    console.log(`클릭 구간 시작 : ${start}s / 클릭 구간 끝 : ${end}s`);\r\n  };\r\n\r\n  handleGetData = (data, brdno) => {\r\n    this.state.result = this.state.result.concat({\r\n      brdno: this.state.maxNo,\r\n      ...data,\r\n    });\r\n    if (!brdno) {\r\n      // Insert\r\n      this.setState({\r\n        maxNo: this.state.maxNo + 1,\r\n        boards: this.state.boards.concat({\r\n          brdno: this.state.maxNo,\r\n          ...data,\r\n          regionStart: this.state.start,\r\n          regionEnd: this.state.end,\r\n        }),\r\n        selectedBoard: {},\r\n      });\r\n    } else {\r\n      // Update\r\n      this.setState({\r\n        boards: this.state.boards.map((row) =>\r\n          brdno === row.brdno\r\n            ? {\r\n                brdno,\r\n                ...data,\r\n                regionStart: this.state.start,\r\n                regionEnd: this.state.end,\r\n              }\r\n            : row\r\n        ),\r\n        selectedBoard: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemove = (brdno) => {\r\n    if (brdno !== 0)\r\n      this.setState({\r\n        boards: this.state.boards.filter((row) => row.brdno !== brdno),\r\n      });\r\n  };\r\n\r\n  handleSelectRow = (row) => {\r\n    this.setState({ selectedBoard: row });\r\n  };\r\n\r\n  handleClearRegionPoints = () => {\r\n    this.setState({ start: null, end: null }, () =>\r\n      console.log(this.state.start, this.state.end)\r\n    );\r\n    console.log(\"Clear Region start&end points\");\r\n  };\r\n  handleResult = (Context,result) => {\r\n    //const projData = useContext(DataContext);\r\n    this.setState({\r\n      result: result,\r\n      //result:this.state.result.concat({projData,result}),\r\n    });\r\n  };\r\n  render() {\r\n    const { boards, selectedBoard, wavesurfer, result, KSTProject, token } = this.state;\r\n    //const projData=Context();\r\n    //console.log(projData);\r\n    const {updatetoken}=this;\r\n    console.log(\"userToken in Main\", token);\r\n    return (\r\n      <>\r\n        <Waveform\r\n          onClick={this.handleSetRegionPoints}\r\n          handleAudioPlay={this.handleAudioPlay}\r\n          audioPlaying={this.state.audioPlaying}\r\n          handleClearRegionPoints={this.handleClearRegionPoints}\r\n        />\r\n\r\n        {/* 입력창 */}\r\n        <TalkerForm\r\n          onSaveData={this.handleGetData}\r\n          selectedBoard={selectedBoard}\r\n        />\r\n\r\n        {/* 전사창 */}\r\n        {boards.map((row) => (\r\n          <TalkerItem\r\n            key={row.brdno}\r\n            row={row}\r\n            onRemove={this.handleRemove}\r\n            onSelectRow={this.handleSelectRow}\r\n            handleAudioPlay={this.handleAudioPlay}\r\n            audioPlaying={this.state.audioPlaying}\r\n            handleSetRegionPoints={this.handleSetRegionPoints}\r\n            wavesurfer={wavesurfer}\r\n          />\r\n        ))}\r\n        {console.log(\"boards\", boards)}\r\n        <Save handleResult={this.handleResult} result={result} />\r\n        <Context creds={{KSTProject, token, boards}}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataContext from \"../../../Contexts/DataContext\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst Title = styled.h2`\r\n  color: #303f9f;\r\n  margin-top: 30px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  border: 1px solid #303f9f;\r\n  border-radius: 10px;\r\n  padding: 20px 30px;\r\n`;\r\n\r\nconst NextBtn = styled(Link)`\r\n  margin-top: 30px;\r\n  text-decoration: none;\r\n  color: #ffffff;\r\n  background-color: #303f9f;\r\n  padding: 10px;\r\n  border: 1px solid #303f9f;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default ({ state, getUploadedFile, handleChange }) => {\r\n  const { projectName, fileName } = state;\r\n  const projData = useContext(DataContext);\r\n\r\n  return (\r\n    <Container style={{ marginTop: 150 }} component=\"main\" maxWidth=\"md\">\r\n      <Typography component=\"h1\" variant=\"h2\" align=\"center\">\r\n        KSTARS\r\n      </Typography>\r\n      <Title>Project 시작하기</Title>\r\n      <Form>\r\n        <Grid container style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Grid xs={2} item={true}>\r\n            <Typography>프로젝트 명</Typography>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              value={projectName}\r\n              onChange={handleChange}\r\n              name=\"projectName\"\r\n              label=\"프로젝트 명\"\r\n              helperText=\"프로젝트 명을 기재해주세요.\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ marginTop: 30 }}>\r\n          <Grid xs={2} item={true}>\r\n            <Typography style={{ marginTop: 20 }}>음성파일 등록</Typography>\r\n          </Grid>\r\n          <Grid\r\n            xs={9}\r\n            item={true}\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"파일 명*\"\r\n              readOnly\r\n              value={fileName}\r\n              fullWidth={true}\r\n              required\r\n              style={{ margin: 10 }}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" component=\"label\">\r\n              Browse\r\n              <input\r\n                type=\"file\"\r\n                accept=\"audio/*\"\r\n                onChange={getUploadedFile}\r\n                hidden\r\n              />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" style={{ marginTop: 30 }}>\r\n          <Grid xs={2} item={true}>\r\n            <Typography style={{ marginTop: 20 }}>전사 타입</Typography>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{ marginLeft: 10, marginTop: 15 }}\r\n            >\r\n              <RadioGroup\r\n                aria-label=\"type\"\r\n                name=\"conversationType\"\r\n                row\r\n                onChange={handleChange}\r\n              >\r\n                <FormControlLabel\r\n                  value=\"narration\"\r\n                  control={<Radio />}\r\n                  label=\"나레이션\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"conversation\"\r\n                  control={<Radio />}\r\n                  label=\"대화\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"etc\"\r\n                  control={<Radio />}\r\n                  label=\"기타\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n      <NextBtn\r\n        to=\"/waveform/start/header\"\r\n        onClick={() => {\r\n          projData.update({ ...state });\r\n        }}\r\n      >\r\n        헤더 마법사로 이동\r\n      </NextBtn>\r\n    </Container>\r\n  );\r\n};\r\n","import ProjectStartContainer from \"./ProjectStartContainer\";\r\n\r\nexport default ProjectStartContainer;\r\n","import React, { Component } from \"react\";\r\nimport ProjectStartPresenter from \"./ProjectStartPresenter\";\r\n\r\nclass ProjectStartContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectName: \"\",\r\n      fileName: \"\",\r\n      file: null,\r\n      conversationType: \"\",\r\n    };\r\n    this.getUploadedFile = this.getUploadedFile.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  getUploadedFile = (e) => {\r\n    const file = e.target.files[0];\r\n    this.setState({ fileName: file.name, file });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n      },\r\n      () => console.log(\"project start state\", this.state)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ProjectStartPresenter\r\n        state={this.state}\r\n        getUploadedFile={this.getUploadedFile}\r\n        handleChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectStartContainer;\r\n","import React, { useContext, useState } from \"react\";\r\nimport DataContext from \"../../../Contexts/DataContext\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Box from \"@material-ui/core/Box\";\r\nconst Title = styled.h2`\r\n  color: #303f9f;\r\n  margin-top: 30px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  border: 1px solid #303f9f;\r\n  border-radius: 10px;\r\n  padding: 20px 30px;\r\n`;\r\n\r\nconst NextBtn = styled.div`\r\n  text-decoration: none;\r\n  color: #ffffff;\r\n  margin: 0 auto;\r\n  margin-top: 20px;\r\n  background-color: #303f9f;\r\n  padding: 10px;\r\n  border: 1px solid #303f9f;\r\n  border-radius: 5px;\r\n  width: 100px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst HeaderPresenter = ({ state, handleSaveData, handleChange, handleSubmit, handleSubmit2, handleFlag }) => {\r\n  const projData = useContext(DataContext);\r\n  console.log(\"header\", projData);\r\n  const {\r\n    // KSTProject: {\r\n    //   m_Audio: {\r\n    //     audioCurrentPosition,\r\n    //     audioFileIndex,\r\n    //     audioPath\r\n    //   },\r\n    //   m_KTierMorpVer2: {\r\n    //     dataType,\r\n    //     datas: [{\r\n    //       morp,\r\n    //       speaker,\r\n    //       uid,\r\n    //       user\r\n    //     }, ]\r\n    //   },\r\n    //   m_KTierVer2: {\r\n    //     //dataType,\r\n    //     datas: [{\r\n    //       //speaker,\r\n    //       text,\r\n    //       time,\r\n    //       //uid\r\n    //     }, ]\r\n    //   },\r\n    //   m_Option: {\r\n    //     speakerList,\r\n    //     stringOption\r\n    //   },\r\n    //   m_header: {\r\n    //     arrID: [{\r\n    //       age,\r\n    //       code,\r\n    //       corpus,\r\n    //       dateOfBirth,\r\n    //       edu,\r\n    //       group,\r\n    //       region,\r\n    //       role,\r\n    //       ses,\r\n    //       sex\r\n    //     }],\r\n    //     arrParticipants,\r\n    //     birthOfCHI,\r\n    //     //birthPlaceOfCHI,\r\n    //     comment,\r\n    //     date,\r\n    //     language,\r\n    //     location,\r\n    //     media,\r\n    //     recording,\r\n    //     reviewer,\r\n    //     situation,\r\n    //     speechType,\r\n    //     transcriber\r\n    //   },\r\n    //   userDto: {\r\n    //     fileName,\r\n    //     id,\r\n    //     //user\r\n    //   },\r\n    //   version\r\n    // },\r\n    SpeechType,\r\n    Participants,\r\n    BirthPlace,\r\n    Location,\r\n    Situation,\r\n    Recording,\r\n    Transcriber,\r\n    Reviewer,\r\n    Comment,\r\n    IDCorpus,\r\n    IDDateOfBirth,\r\n    \r\n    ChIDAge,\r\n    ChIDSex,\r\n    ChIDGroup,\r\n    ChIDRegion,\r\n    ChIDSES,\r\n    ChIDEdu,\r\n\r\n    MoIDAge,\r\n    MoIDSex,\r\n    MoIDGroup,\r\n    MoIDRegion,\r\n    MoIDSES,\r\n    MoIDEdu,\r\n\r\n    FaIDAge,\r\n    FaIDSes,\r\n    FaIDGroup,\r\n    FaIDRegion,\r\n    FaIDSES,\r\n    FaIDEdu,\r\n    \r\n    IDCode,\r\n    IDRole,\r\n    Code,\r\n    Role,\r\n    CHI,\r\n    MOT,\r\n    FAT,\r\n    addFlag,\r\n    value,\r\n    IDAge,\r\n    IDSex,\r\n    IDGroup,\r\n    IDRegion,\r\n    IDSES,\r\n    IDEdu,\r\n  } = state;\r\n\r\n  return (\r\n    <Container style={{ marginTop: 150 }} component=\"main\" maxWidth=\"md\">\r\n      <Typography component=\"h1\" variant=\"h2\" align=\"center\">\r\n        KSTARS\r\n      </Typography>\r\n      <Title>헤더 마법사</Title>\r\n      <Form>\r\n        <Grid container direction=\"column\" style={{ marginTop: 30 }}>\r\n          <Grid xs={2} item={true}>\r\n            <Typography style={{ marginTop: 20 }}>헤더 정보 입력</Typography>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              label=\"출생지\"\r\n              name=\"BirthPlace\"\r\n              value={BirthPlace}\r\n              onChange={handleChange}\r\n              helperText=\"아동의 출생지를 기재해주세요.\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid>\r\n          {/* <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              label=\"스피치 타입\"\r\n              name=\"SpeechType\"\r\n              value={projectName}\r\n              onChange={handleChange}\r\n              helperText=\"\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid> */}\r\n          <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              label=\"장소\"\r\n              name=\"Location\"\r\n              value={Location}\r\n              onChange={handleChange}\r\n              helperText=\"장소를 기재해주세요.\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              label=\"상황\"\r\n              name=\"Situation\"\r\n              value={Situation}\r\n              onChange={handleChange}\r\n              helperText=\"상황을 기재해주세요.\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              label=\"전사자\"\r\n              name=\"Transcriber\"\r\n              value={Transcriber}\r\n              onChange={handleChange}\r\n              helperText=\"전사자를 기재해주세요.\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              label=\"검토자\"\r\n              name=\"Reviewer\"\r\n              value={Reviewer}\r\n              onChange={handleChange}\r\n              helperText=\"검토자를 기재해주세요.\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <TextField\r\n              required\r\n              label=\"코멘트\"\r\n              name=\"Comment\"\r\n              value={Comment}\r\n              onChange={handleChange}\r\n              helperText=\"코멘트를 기재해주세요.\"\r\n              fullWidth\r\n              style={{ marginLeft: 10 }}\r\n            />\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{ marginLeft: 10, marginTop: 15 }}\r\n            >\r\n              <FormLabel component=\"legend\">녹음 음질</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"Recording\"\r\n                name=\"Recording\"\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel value=\"good\" control={<Radio />} label=\"상\" />\r\n                <FormControlLabel\r\n                  value=\"average\"\r\n                  control={<Radio />}\r\n                  label=\"중\"\r\n                />\r\n                <FormControlLabel value=\"bad\" control={<Radio />} label=\"하\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n      </Form>\r\n      \r\n\r\n      <Box border={1} borderRadius=\"borderRadius\" borderColor=\"#243cd4\">\r\n      <Grid container direction=\"column\" style={{ marginTop: 10 }} >\r\n      <form onSubmit={handleSubmit2}>\r\n      <Grid container direction=\"column\">\r\n          <Grid xs={2} item={true}>\r\n            <Typography style={{ marginTop: 20 }}>✔ 구성원 선택</Typography>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <FormControl component=\"fieldset\" style={{marginLeft:10, marginTop:15}}>\r\n              <RadioGroup aria-label=\"value\" name=\"value\" value={value} onChange={handleChange} row>\r\n                <FormControlLabel value=\"child\" control={<Radio/>} label=\"Child\"/>\r\n                <FormControlLabel value=\"mother\" control={<Radio/>} label=\"Mother\" />\r\n                <FormControlLabel value=\"father\" control={<Radio/>} label=\"Father\"/>\r\n                {addFlag?(<FormControlLabel value={Code} control={<Radio/>} label={Role}/> ):(<span></span>)}\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          {/* <Grid xs={9} item={true}>\r\n              <TextField\r\n                required\r\n                label=\"\"\r\n                name=\"IDCorpus\"\r\n                // value={projectName}\r\n                // onChange={handleValueChange}\r\n                helperText=\"\"\r\n                fullWidth\r\n                style={{ marginLeft: 10 }}\r\n              />\r\n            </Grid> */}\r\n          {/* <Grid xs={2} item={true}>\r\n              // 출생일\r\n            </Grid> */}\r\n        </Grid>\r\n      <Grid xs={9} item={true}>\r\n        <Grid xs={2} item={true}>\r\n        <FormControl\r\n              style={{ marginLeft: 10, marginTop: 15, marginBottom: 15 }}\r\n            >\r\n              <InputLabel htmlFor=\"age-native-simple\">연령</InputLabel>\r\n              <Select\r\n                native\r\n                name={\"IDAge\"}\r\n                value={IDAge}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  name: \"IDAge\",\r\n                  id: \"age-native-simple\",\r\n                }}\r\n              >\r\n                <option value={\"none\"}>선택 안함</option>\r\n                <option value={10}>10대</option>\r\n                <option value={20}>20대</option>\r\n                <option value={30}>30대</option>\r\n                <option value={40}>40대</option>\r\n                <option value={50}>50대</option>\r\n                <option value={60}>60대</option>\r\n              </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid xs={9} item={true}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{ marginLeft: 10, marginTop: 15 }}\r\n            >\r\n              <FormLabel component=\"legend\">성별</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"IDSex\"\r\n                name=\"IDSex\"\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"male\"\r\n                  control={<Radio />}\r\n                  label=\"남자\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"female\"\r\n                  control={<Radio />}\r\n                  label=\"여자\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"none\"\r\n                  control={<Radio />}\r\n                  label=\"없음\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{ marginLeft: 10, marginTop: 15 }}\r\n            >\r\n              <FormLabel component=\"legend\">그룹</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"IDGroup\"\r\n                name=\"IDGroup\"\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"대도시\"\r\n                  control={<Radio />}\r\n                  label=\"대도시\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"중소도시\"\r\n                  control={<Radio />}\r\n                  label=\"중소도시\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"농촌\"\r\n                  control={<Radio />}\r\n                  label=\"농촌\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"none\"\r\n                  control={<Radio />}\r\n                  label=\"없음\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{ marginLeft: 10, marginTop: 15 }}\r\n            >\r\n              <FormLabel component=\"legend\">지역</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"IDRegion\"\r\n                name=\"IDRegion\"\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"서울/경기\"\r\n                  control={<Radio />}\r\n                  label=\"서울/경기\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"경상도\"\r\n                  control={<Radio />}\r\n                  label=\"경상도\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"전라도\"\r\n                  control={<Radio />}\r\n                  label=\"전라도\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"충청도\"\r\n                  control={<Radio />}\r\n                  label=\"충청도\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"기타\"\r\n                  control={<Radio />}\r\n                  label=\"기타\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"none\"\r\n                  control={<Radio />}\r\n                  label=\"정보 없음\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{ marginLeft: 10, marginTop: 15 }}\r\n            >\r\n              <FormLabel component=\"legend\">사회적 경제 지위</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"IDSES\"\r\n                name=\"IDSES\"\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"150만원 이하\"\r\n                  control={<Radio />}\r\n                  label=\"150만원 이하\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"151~250만원\"\r\n                  control={<Radio />}\r\n                  label=\"151~250만원\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"251~350만원\"\r\n                  control={<Radio />}\r\n                  label=\"251~350만원\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"351~450만원\"\r\n                  control={<Radio />}\r\n                  label=\"351~450만원\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"451만원 이상\"\r\n                  control={<Radio />}\r\n                  label=\"451만원 이상\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"none\"\r\n                  control={<Radio />}\r\n                  label=\"선택 안함\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid xs={9} item={true}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              style={{ marginLeft: 10, marginTop: 15 }}\r\n            >\r\n              <FormLabel component=\"legend\">학력</FormLabel>\r\n              <RadioGroup\r\n                aria-label=\"IDEdu\"\r\n                name=\"IDEdu\"\r\n                onChange={handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"초등학교 졸업 이하\"\r\n                  control={<Radio />}\r\n                  label=\"초등학교 졸업 이하\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"중학교 졸업\"\r\n                  control={<Radio />}\r\n                  label=\"중학교 졸업\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"고등학교 졸업\"\r\n                  control={<Radio />}\r\n                  label=\"고등학교 졸업\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"대학교 졸업\"\r\n                  control={<Radio />}\r\n                  label=\"대학교 졸업\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"대학원 이상\"\r\n                  control={<Radio />}\r\n                  label=\"대학원 이상\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"none\"\r\n                  control={<Radio />}\r\n                  label=\"선택 안함\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n      </Grid>\r\n      </form>\r\n      </Grid>\r\n      </Box>\r\n      <Link onClick={() => projData.update({ ...state })} to=\"/waveform/main\">\r\n        <NextBtn>Start</NextBtn>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HeaderPresenter;\r\n","import HeaderContainer from \"./HeaderContainer\";\r\n\r\nexport default HeaderContainer;\r\n","import React, { Component } from \"react\";\r\nimport HeaderPresenter from \"./HeaderPresenter\";\r\n\r\nclass HeaderContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // KSTProject: {\r\n      //   m_Audio: {\r\n      //     audioCurrentPosition: 0, //\r\n      //     audioFileIndex: 0, //오디오 인덱스\r\n      //     audioPath: [\r\n      //       localStorage.audioFile,  //오디오 파일 경로\r\n      //     ],\r\n\r\n      //   },\r\n      //   m_KTierMorpVer2: {\r\n      //     dataType: \"\",\r\n      //     datas: [{\r\n      //       morp: \"\",\r\n      //       speaker: \"\",\r\n      //       uid: \"\",\r\n      //       user: \"\"\r\n      //     }, ]\r\n      //   },\r\n      //   m_KTierVer2: {\r\n      //     //dataType: \"\",\r\n      //     datas: [{\r\n      //       //speaker: \"\",\r\n      //       text: \"\",\r\n      //       time: \"\",\r\n      //       //uid: 0\r\n      //     }, ]\r\n      //   },\r\n      //   m_Option: {\r\n      //     speakerList: [ //(CHI,MOT,FAT 등)\r\n      //       \"\",\r\n      //     ],\r\n      //     stringOption: \"\" //\r\n      //   },\r\n      //   m_header: {\r\n      //     arrID: [{\r\n      //       age: \"\", //연령\r\n      //       code: \"\", //코드(CH1,ADU1)\r\n      //       corpus: \"\", //??\r\n      //       dateOfBirth: \"\", //생년월일\r\n      //       edu: \"\", //학력\r\n      //       group: \"\", //그룹(대도시,중소도시,농촌)\r\n      //       region: \"\", //지역\r\n      //       role: \"\", //구성원\r\n      //       ses: \"\", //사회적 경제 지위\r\n      //       sex: \"\" //성별\r\n      //     }],\r\n      //     arrParticipants: [ //참가자\r\n      //       \"\"\r\n      //     ],\r\n      //     birthOfCHI: \"\",  //아동 생년월일\r\n      //     birthPlaceOfCHI: \"\", //아동 출생지\r\n      //     comment: \"\", //코멘트\r\n      //     date: \"\", //날짜\r\n      //     language: \"\", //언어\r\n      //     location: \"\", //장소\r\n      //     media: \"\", //??\r\n      //     recording: \"\", //녹음 음질\r\n      //     reviewer: \"\", //검토자\r\n      //     situation: \"\", //상황\r\n      //     speechType: \"\", //??\r\n      //     transcriber: \"\" //전사자\r\n      //   },\r\n      //   userDto: {\r\n      //     fileName: localStorage.projectName, //파일이름\r\n      //     id: \"\", //유저 아이디\r\n      //     user: \"\" //??\r\n      //   },\r\n      //   version: \"\" //버전\r\n      // },\r\n      SpeechType: \"\", // ??\r\n      Participants: \"\", // ??\r\n      BirthPlace: \"\", // 아동 출생지\r\n      Location: \"\", // 장소\r\n      Situation: \"\", // 상황\r\n      Recording: \"\", // 녹음 음질\r\n      Transcriber: \"\", // 전사자\r\n      Reviewer: \"\", // 검토자\r\n      Comment: \"\", // 코멘트\r\n      IDCorpus: \"\", // ??\r\n      IDDateOfBirth: \"\", // 출생일\r\n      CHI: false,\r\n      MOT: false,\r\n      FAT: false,\r\n    \r\n      ChIDAge: \"\", // 연령\r\n      ChIDSex: \"\", // 성별\r\n      ChIDGroup: \"\", // 그룹\r\n      ChIDRegion: \"\", // 지역\r\n      ChIDSES: \"\", // 사회적 경제 지위\r\n      ChIDEdu: \"\", // 학력\r\n\r\n      MoIDAge: \"\", // 연령\r\n      MoIDSex: \"\", // 성별\r\n      MoIDGroup: \"\", // 그룹\r\n      MoIDRegion: \"\", // 지역\r\n      MoIDSES: \"\", // 사회적 경제 지위\r\n      MoIDEdu: \"\", // 학력\r\n\r\n      FaIDAge: \"\", // 연령\r\n      FaIDSex: \"\", // 성별\r\n      FaIDGroup: \"\", // 그룹\r\n      FaIDRegion: \"\", // 지역\r\n      FaIDSES: \"\", // 사회적 경제 지위\r\n      FaIDEdu: \"\", // 학력\r\n\r\n      IDCode: \"\", // 코드\r\n      IDRole: \"\", // 역할\r\n      Code:\"\",\r\n      Role:\"\",\r\n      \r\n      addFlag: false,\r\n      value:\"\",\r\n      IDAge:\"\",\r\n      IDSex:\"\",\r\n      IDGroup:\"\",\r\n      IDRegion:\"\",\r\n      IDSES:\"\",\r\n      IDEdu:\"\",\r\n\r\n      board:[\r\n        {\r\n          value:\"\",\r\n          IDAge:\"\",\r\n          IDSex:\"\",\r\n          IDGroup:\"\",\r\n          IDRegion:\"\",\r\n          IDSES:\"\",\r\n          IDEdu:\"\",\r\n        }\r\n      ],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleSaveData=(data,value)=>{\r\n    if(value){\r\n      this.setState({\r\n        board:this.state.board.map((row)=>\r\n          value===row.value\r\n          ?{\r\n            value,\r\n            ...data,\r\n          }\r\n          :row\r\n        ),\r\n        board:this.state.board.concat({value:this.state.value,...data})\r\n      })\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    const KSTProject=this.state.KSTProject;\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value,\r\n      },\r\n      () => console.log(\"project header state\", this.state)\r\n    );\r\n  };\r\n  handleSubmit= async(e)=>{\r\n    e.preventDefault();\r\n    const {IDCode, IDRole}=this.state;\r\n    this.setState({\r\n      Code:IDCode,\r\n      Role:IDRole,\r\n    });\r\n  }\r\n  handleSubmit2= async(e) =>{\r\n    e.preventDefault();\r\n    let value = this.state.value;\r\n    const {IDAge,\r\n          IDSex,\r\n          IDGroup,\r\n          IDRegion,\r\n          IDSES,\r\n          IDEdu,}=this.state;\r\n    let data = {\r\n      IDAge,IDSex,IDGroup,IDRegion,IDSES,IDEdu,\r\n    };\r\n    this.handleSaveData(data,value);\r\n    this.setState({});\r\n  }\r\n \r\n  handleFlag=()=>{\r\n    this.setState({\r\n      addFlag:true,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <HeaderPresenter \r\n        state={this.state}\r\n        handleSaveData={this.handleSaveData}\r\n        handleChange={this.handleChange} \r\n        handleSubmit={this.handleSubmit}\r\n        handleSubmit2={this.handleSubmit2}\r\n        handleFlag={this.handleFlag} \r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderContainer;\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport AuthRoute from \"../Routes/AuthRoute\";\r\nimport DataContext from \"../Contexts/DataContext\";\r\nimport SignUp from \"./Pages/SignUp\";\r\nimport Login from \"./Pages/Login\";\r\nimport Main from \"./Pages/Main\";\r\nimport ProjectStart from \"./Pages/ProjectStart\";\r\nimport Header from \"./Pages/Header\";\r\n\r\nconst Router = ({ user }) => {\r\n  const [projData, setProjData] = useState({});\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/waveform\" exact>\r\n          {!user.userToken ? (\r\n            <Login updateUserToken={user.updateUserToken} />\r\n          ) : (\r\n            <Redirect to=\"/waveform/start/project\" />\r\n          )}\r\n        </Route>\r\n        <Route path=\"/waveform/signup\" exact component={SignUp} />\r\n        <DataContext.Provider\r\n          value={{\r\n            data: projData,\r\n            update: (state) =>\r\n              setProjData((prev) => {\r\n                return { ...prev, ...state };\r\n              }),\r\n          }}\r\n        >\r\n          <AuthRoute\r\n            path=\"/waveform/start/project\"\r\n            isAuthed={user.userToken ? true : false}\r\n          >\r\n            <ProjectStart user={user} />\r\n          </AuthRoute>\r\n          <AuthRoute\r\n            path=\"/waveform/start/header\"\r\n            isAuthed={user.userToken ? true : false}\r\n          >\r\n            <Header user={user} />\r\n          </AuthRoute>\r\n          <AuthRoute\r\n            path=\"/waveform/main\"\r\n            isAuthed={user.userToken ? true : false}\r\n          >\r\n            <Main user={user} />\r\n          </AuthRoute>\r\n        </DataContext.Provider>\r\n        <Redirect from=\"*\" to=\"/waveform\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { createContext } from \"react\";\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;\r\n","import React, { Component } from \"react\";\r\nimport Router from \"./Router\";\r\nimport UserContext from \"../Contexts/UserContext\";\r\nimport { withCookies } from \"react-cookie\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { cookies } = props;\r\n    this.state = {\r\n      userToken: cookies.get(\"JQeQHzzD\") || null,\r\n    };\r\n    this.updateUserToken = this.updateUserToken.bind(this);\r\n  }\r\n\r\n  updateUserToken = (userToken) => {\r\n    this.setState(\r\n      {\r\n        userToken,\r\n      },\r\n      () => this.props.cookies.set(\"JQeQHzzD\", userToken)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { userToken } = this.state;\r\n    const { updateUserToken } = this;\r\n    console.log(\"userToken in App\", userToken);\r\n    return (\r\n      <UserContext.Provider value={userToken}>\r\n        <Router user={{ userToken, updateUserToken }} />\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\nimport { CookiesProvider } from \"react-cookie\";\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}